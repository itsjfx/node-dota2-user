#!/usr/bin/env bash
set -eu -o pipefail

cd "$(dirname "$0")/../"


EXPORTS_FILE="src/generated-protobufs.ts"
PROTOS_PATH="Protobufs/dota2"
OUTPUT_DIR="src/protobufs"
cleanup() {
    rm -rf "$OUTPUT_DIR"
    rm -f "$EXPORTS_FILE"
}
init() {
    cleanup
    mkdir -p "$OUTPUT_DIR"
}
trap 'code="$?"; cleanup; wait; exit "$code"' ERR

init
# TODO: xargs
for file in "$PROTOS_PATH"/*.proto; do
    protoc \
        --proto_path="$PROTOS_PATH" \
        --plugin=./node_modules/.bin/protoc-gen-ts_proto \
        --ts_proto_out="$OUTPUT_DIR" \
        --ts_proto_opt=env=node \
        --ts_proto_opt=esModuleInterop=true \
        --ts_proto_opt=forceLong=string \
        --ts_proto_opt=exportCommonSymbols=false \
        --ts_proto_opt=unrecognizedEnum=false \
        --ts_proto_opt=outputJsonMethods=false \
        --ts_proto_opt=outputPartialMethods=false \
        "$file"
done

# TODO I'm going to regret this, cause I hate the exports of the current module
cat << EOF > "$EXPORTS_FILE"
// DO NOT MANUALLY MODIFY THIS FILE
// Generated by build-protos on $(date --utc +"%Y-%m-%dT%H:%M:%SZ")

EOF

all_files="$(find "$OUTPUT_DIR" -name '*.ts' -mindepth 1 -maxdepth 1 -print)"
bad_files=("$OUTPUT_DIR"/steammessages_base.ts "$OUTPUT_DIR"/valveextensions.ts)
files_to_export="$(printf '%s\n' "$all_files" "${bad_files[@]}" | LC_ALL=C sort | uniq -u)"
for file in $files_to_export; do
    echo "export * from './protobufs/$(basename "$file" .ts)';" >> "$EXPORTS_FILE"
done
