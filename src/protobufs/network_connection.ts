/* eslint-disable */

export enum ENetworkDisconnectionReason {
  NETWORK_DISCONNECT_INVALID = 0,
  NETWORK_DISCONNECT_SHUTDOWN = 1,
  NETWORK_DISCONNECT_DISCONNECT_BY_USER = 2,
  NETWORK_DISCONNECT_DISCONNECT_BY_SERVER = 3,
  NETWORK_DISCONNECT_LOST = 4,
  NETWORK_DISCONNECT_OVERFLOW = 5,
  NETWORK_DISCONNECT_STEAM_BANNED = 6,
  NETWORK_DISCONNECT_STEAM_INUSE = 7,
  NETWORK_DISCONNECT_STEAM_TICKET = 8,
  NETWORK_DISCONNECT_STEAM_LOGON = 9,
  NETWORK_DISCONNECT_STEAM_AUTHCANCELLED = 10,
  NETWORK_DISCONNECT_STEAM_AUTHALREADYUSED = 11,
  NETWORK_DISCONNECT_STEAM_AUTHINVALID = 12,
  NETWORK_DISCONNECT_STEAM_VACBANSTATE = 13,
  NETWORK_DISCONNECT_STEAM_LOGGED_IN_ELSEWHERE = 14,
  NETWORK_DISCONNECT_STEAM_VAC_CHECK_TIMEDOUT = 15,
  NETWORK_DISCONNECT_STEAM_DROPPED = 16,
  NETWORK_DISCONNECT_STEAM_OWNERSHIP = 17,
  NETWORK_DISCONNECT_SERVERINFO_OVERFLOW = 18,
  NETWORK_DISCONNECT_TICKMSG_OVERFLOW = 19,
  NETWORK_DISCONNECT_STRINGTABLEMSG_OVERFLOW = 20,
  NETWORK_DISCONNECT_DELTAENTMSG_OVERFLOW = 21,
  NETWORK_DISCONNECT_TEMPENTMSG_OVERFLOW = 22,
  NETWORK_DISCONNECT_SOUNDSMSG_OVERFLOW = 23,
  NETWORK_DISCONNECT_SNAPSHOTOVERFLOW = 24,
  NETWORK_DISCONNECT_SNAPSHOTERROR = 25,
  NETWORK_DISCONNECT_RELIABLEOVERFLOW = 26,
  NETWORK_DISCONNECT_BADDELTATICK = 27,
  NETWORK_DISCONNECT_NOMORESPLITS = 28,
  NETWORK_DISCONNECT_TIMEDOUT = 29,
  NETWORK_DISCONNECT_DISCONNECTED = 30,
  NETWORK_DISCONNECT_LEAVINGSPLIT = 31,
  NETWORK_DISCONNECT_DIFFERENTCLASSTABLES = 32,
  NETWORK_DISCONNECT_BADRELAYPASSWORD = 33,
  NETWORK_DISCONNECT_BADSPECTATORPASSWORD = 34,
  NETWORK_DISCONNECT_HLTVRESTRICTED = 35,
  NETWORK_DISCONNECT_NOSPECTATORS = 36,
  NETWORK_DISCONNECT_HLTVUNAVAILABLE = 37,
  NETWORK_DISCONNECT_HLTVSTOP = 38,
  NETWORK_DISCONNECT_KICKED = 39,
  NETWORK_DISCONNECT_BANADDED = 40,
  NETWORK_DISCONNECT_KICKBANADDED = 41,
  NETWORK_DISCONNECT_HLTVDIRECT = 42,
  NETWORK_DISCONNECT_PURESERVER_CLIENTEXTRA = 43,
  NETWORK_DISCONNECT_PURESERVER_MISMATCH = 44,
  NETWORK_DISCONNECT_USERCMD = 45,
  NETWORK_DISCONNECT_REJECTED_BY_GAME = 46,
  NETWORK_DISCONNECT_MESSAGE_PARSE_ERROR = 47,
  NETWORK_DISCONNECT_INVALID_MESSAGE_ERROR = 48,
  NETWORK_DISCONNECT_BAD_SERVER_PASSWORD = 49,
  NETWORK_DISCONNECT_DIRECT_CONNECT_RESERVATION = 50,
  NETWORK_DISCONNECT_CONNECTION_FAILURE = 51,
  NETWORK_DISCONNECT_NO_PEER_GROUP_HANDLERS = 52,
  NETWORK_DISCONNECT_RECONNECTION = 53,
  NETWORK_DISCONNECT_LOOPSHUTDOWN = 54,
  NETWORK_DISCONNECT_LOOPDEACTIVATE = 55,
  NETWORK_DISCONNECT_HOST_ENDGAME = 56,
  NETWORK_DISCONNECT_LOOP_LEVELLOAD_ACTIVATE = 57,
  NETWORK_DISCONNECT_CREATE_SERVER_FAILED = 58,
  NETWORK_DISCONNECT_EXITING = 59,
  NETWORK_DISCONNECT_REQUEST_HOSTSTATE_IDLE = 60,
  NETWORK_DISCONNECT_REQUEST_HOSTSTATE_HLTVRELAY = 61,
  NETWORK_DISCONNECT_CLIENT_CONSISTENCY_FAIL = 62,
  NETWORK_DISCONNECT_CLIENT_UNABLE_TO_CRC_MAP = 63,
  NETWORK_DISCONNECT_CLIENT_NO_MAP = 64,
  NETWORK_DISCONNECT_CLIENT_DIFFERENT_MAP = 65,
  NETWORK_DISCONNECT_SERVER_REQUIRES_STEAM = 66,
  NETWORK_DISCONNECT_STEAM_DENY_MISC = 67,
  NETWORK_DISCONNECT_STEAM_DENY_BAD_ANTI_CHEAT = 68,
  NETWORK_DISCONNECT_SERVER_SHUTDOWN = 69,
  NETWORK_DISCONNECT_SPLITPACKET_SEND_OVERFLOW = 70,
  NETWORK_DISCONNECT_REPLAY_INCOMPATIBLE = 71,
  NETWORK_DISCONNECT_CONNECT_REQUEST_TIMEDOUT = 72,
  NETWORK_DISCONNECT_SERVER_INCOMPATIBLE = 73,
  NETWORK_DISCONNECT_LOCALPROBLEM_MANYRELAYS = 74,
  NETWORK_DISCONNECT_LOCALPROBLEM_HOSTEDSERVERPRIMARYRELAY = 75,
  NETWORK_DISCONNECT_LOCALPROBLEM_NETWORKCONFIG = 76,
  NETWORK_DISCONNECT_LOCALPROBLEM_OTHER = 77,
  NETWORK_DISCONNECT_REMOTE_TIMEOUT = 79,
  NETWORK_DISCONNECT_REMOTE_TIMEOUT_CONNECTING = 80,
  NETWORK_DISCONNECT_REMOTE_OTHER = 81,
  NETWORK_DISCONNECT_REMOTE_BADCRYPT = 82,
  NETWORK_DISCONNECT_REMOTE_CERTNOTTRUSTED = 83,
  NETWORK_DISCONNECT_UNUSUAL = 84,
  NETWORK_DISCONNECT_INTERNAL_ERROR = 85,
  NETWORK_DISCONNECT_REJECT_BADCHALLENGE = 128,
  NETWORK_DISCONNECT_REJECT_NOLOBBY = 129,
  NETWORK_DISCONNECT_REJECT_BACKGROUND_MAP = 130,
  NETWORK_DISCONNECT_REJECT_SINGLE_PLAYER = 131,
  NETWORK_DISCONNECT_REJECT_HIDDEN_GAME = 132,
  NETWORK_DISCONNECT_REJECT_LANRESTRICT = 133,
  NETWORK_DISCONNECT_REJECT_BADPASSWORD = 134,
  NETWORK_DISCONNECT_REJECT_SERVERFULL = 135,
  NETWORK_DISCONNECT_REJECT_INVALIDRESERVATION = 136,
  NETWORK_DISCONNECT_REJECT_FAILEDCHANNEL = 137,
  NETWORK_DISCONNECT_REJECT_CONNECT_FROM_LOBBY = 138,
  NETWORK_DISCONNECT_REJECT_RESERVED_FOR_LOBBY = 139,
  NETWORK_DISCONNECT_REJECT_INVALIDKEYLENGTH = 140,
  NETWORK_DISCONNECT_REJECT_OLDPROTOCOL = 141,
  NETWORK_DISCONNECT_REJECT_NEWPROTOCOL = 142,
  NETWORK_DISCONNECT_REJECT_INVALIDCONNECTION = 143,
  NETWORK_DISCONNECT_REJECT_INVALIDCERTLEN = 144,
  NETWORK_DISCONNECT_REJECT_INVALIDSTEAMCERTLEN = 145,
  NETWORK_DISCONNECT_REJECT_STEAM = 146,
  NETWORK_DISCONNECT_REJECT_SERVERAUTHDISABLED = 147,
  NETWORK_DISCONNECT_REJECT_SERVERCDKEYAUTHINVALID = 148,
  NETWORK_DISCONNECT_REJECT_BANNED = 149,
  NETWORK_DISCONNECT_KICKED_TEAMKILLING = 150,
  NETWORK_DISCONNECT_KICKED_TK_START = 151,
  NETWORK_DISCONNECT_KICKED_UNTRUSTEDACCOUNT = 152,
  NETWORK_DISCONNECT_KICKED_CONVICTEDACCOUNT = 153,
  NETWORK_DISCONNECT_KICKED_COMPETITIVECOOLDOWN = 154,
  NETWORK_DISCONNECT_KICKED_TEAMHURTING = 155,
  NETWORK_DISCONNECT_KICKED_HOSTAGEKILLING = 156,
  NETWORK_DISCONNECT_KICKED_VOTEDOFF = 157,
  NETWORK_DISCONNECT_KICKED_IDLE = 158,
  NETWORK_DISCONNECT_KICKED_SUICIDE = 159,
  NETWORK_DISCONNECT_KICKED_NOSTEAMLOGIN = 160,
  NETWORK_DISCONNECT_KICKED_NOSTEAMTICKET = 161,
}

export function eNetworkDisconnectionReasonFromJSON(object: any): ENetworkDisconnectionReason {
  switch (object) {
    case 0:
    case "NETWORK_DISCONNECT_INVALID":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_INVALID;
    case 1:
    case "NETWORK_DISCONNECT_SHUTDOWN":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_SHUTDOWN;
    case 2:
    case "NETWORK_DISCONNECT_DISCONNECT_BY_USER":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_DISCONNECT_BY_USER;
    case 3:
    case "NETWORK_DISCONNECT_DISCONNECT_BY_SERVER":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_DISCONNECT_BY_SERVER;
    case 4:
    case "NETWORK_DISCONNECT_LOST":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOST;
    case 5:
    case "NETWORK_DISCONNECT_OVERFLOW":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_OVERFLOW;
    case 6:
    case "NETWORK_DISCONNECT_STEAM_BANNED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_BANNED;
    case 7:
    case "NETWORK_DISCONNECT_STEAM_INUSE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_INUSE;
    case 8:
    case "NETWORK_DISCONNECT_STEAM_TICKET":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_TICKET;
    case 9:
    case "NETWORK_DISCONNECT_STEAM_LOGON":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_LOGON;
    case 10:
    case "NETWORK_DISCONNECT_STEAM_AUTHCANCELLED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_AUTHCANCELLED;
    case 11:
    case "NETWORK_DISCONNECT_STEAM_AUTHALREADYUSED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_AUTHALREADYUSED;
    case 12:
    case "NETWORK_DISCONNECT_STEAM_AUTHINVALID":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_AUTHINVALID;
    case 13:
    case "NETWORK_DISCONNECT_STEAM_VACBANSTATE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_VACBANSTATE;
    case 14:
    case "NETWORK_DISCONNECT_STEAM_LOGGED_IN_ELSEWHERE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_LOGGED_IN_ELSEWHERE;
    case 15:
    case "NETWORK_DISCONNECT_STEAM_VAC_CHECK_TIMEDOUT":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_VAC_CHECK_TIMEDOUT;
    case 16:
    case "NETWORK_DISCONNECT_STEAM_DROPPED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_DROPPED;
    case 17:
    case "NETWORK_DISCONNECT_STEAM_OWNERSHIP":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_OWNERSHIP;
    case 18:
    case "NETWORK_DISCONNECT_SERVERINFO_OVERFLOW":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_SERVERINFO_OVERFLOW;
    case 19:
    case "NETWORK_DISCONNECT_TICKMSG_OVERFLOW":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_TICKMSG_OVERFLOW;
    case 20:
    case "NETWORK_DISCONNECT_STRINGTABLEMSG_OVERFLOW":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STRINGTABLEMSG_OVERFLOW;
    case 21:
    case "NETWORK_DISCONNECT_DELTAENTMSG_OVERFLOW":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_DELTAENTMSG_OVERFLOW;
    case 22:
    case "NETWORK_DISCONNECT_TEMPENTMSG_OVERFLOW":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_TEMPENTMSG_OVERFLOW;
    case 23:
    case "NETWORK_DISCONNECT_SOUNDSMSG_OVERFLOW":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_SOUNDSMSG_OVERFLOW;
    case 24:
    case "NETWORK_DISCONNECT_SNAPSHOTOVERFLOW":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_SNAPSHOTOVERFLOW;
    case 25:
    case "NETWORK_DISCONNECT_SNAPSHOTERROR":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_SNAPSHOTERROR;
    case 26:
    case "NETWORK_DISCONNECT_RELIABLEOVERFLOW":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_RELIABLEOVERFLOW;
    case 27:
    case "NETWORK_DISCONNECT_BADDELTATICK":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_BADDELTATICK;
    case 28:
    case "NETWORK_DISCONNECT_NOMORESPLITS":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_NOMORESPLITS;
    case 29:
    case "NETWORK_DISCONNECT_TIMEDOUT":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_TIMEDOUT;
    case 30:
    case "NETWORK_DISCONNECT_DISCONNECTED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_DISCONNECTED;
    case 31:
    case "NETWORK_DISCONNECT_LEAVINGSPLIT":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_LEAVINGSPLIT;
    case 32:
    case "NETWORK_DISCONNECT_DIFFERENTCLASSTABLES":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_DIFFERENTCLASSTABLES;
    case 33:
    case "NETWORK_DISCONNECT_BADRELAYPASSWORD":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_BADRELAYPASSWORD;
    case 34:
    case "NETWORK_DISCONNECT_BADSPECTATORPASSWORD":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_BADSPECTATORPASSWORD;
    case 35:
    case "NETWORK_DISCONNECT_HLTVRESTRICTED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_HLTVRESTRICTED;
    case 36:
    case "NETWORK_DISCONNECT_NOSPECTATORS":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_NOSPECTATORS;
    case 37:
    case "NETWORK_DISCONNECT_HLTVUNAVAILABLE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_HLTVUNAVAILABLE;
    case 38:
    case "NETWORK_DISCONNECT_HLTVSTOP":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_HLTVSTOP;
    case 39:
    case "NETWORK_DISCONNECT_KICKED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED;
    case 40:
    case "NETWORK_DISCONNECT_BANADDED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_BANADDED;
    case 41:
    case "NETWORK_DISCONNECT_KICKBANADDED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKBANADDED;
    case 42:
    case "NETWORK_DISCONNECT_HLTVDIRECT":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_HLTVDIRECT;
    case 43:
    case "NETWORK_DISCONNECT_PURESERVER_CLIENTEXTRA":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_PURESERVER_CLIENTEXTRA;
    case 44:
    case "NETWORK_DISCONNECT_PURESERVER_MISMATCH":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_PURESERVER_MISMATCH;
    case 45:
    case "NETWORK_DISCONNECT_USERCMD":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_USERCMD;
    case 46:
    case "NETWORK_DISCONNECT_REJECTED_BY_GAME":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECTED_BY_GAME;
    case 47:
    case "NETWORK_DISCONNECT_MESSAGE_PARSE_ERROR":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_MESSAGE_PARSE_ERROR;
    case 48:
    case "NETWORK_DISCONNECT_INVALID_MESSAGE_ERROR":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_INVALID_MESSAGE_ERROR;
    case 49:
    case "NETWORK_DISCONNECT_BAD_SERVER_PASSWORD":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_BAD_SERVER_PASSWORD;
    case 50:
    case "NETWORK_DISCONNECT_DIRECT_CONNECT_RESERVATION":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_DIRECT_CONNECT_RESERVATION;
    case 51:
    case "NETWORK_DISCONNECT_CONNECTION_FAILURE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_CONNECTION_FAILURE;
    case 52:
    case "NETWORK_DISCONNECT_NO_PEER_GROUP_HANDLERS":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_NO_PEER_GROUP_HANDLERS;
    case 53:
    case "NETWORK_DISCONNECT_RECONNECTION":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_RECONNECTION;
    case 54:
    case "NETWORK_DISCONNECT_LOOPSHUTDOWN":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOOPSHUTDOWN;
    case 55:
    case "NETWORK_DISCONNECT_LOOPDEACTIVATE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOOPDEACTIVATE;
    case 56:
    case "NETWORK_DISCONNECT_HOST_ENDGAME":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_HOST_ENDGAME;
    case 57:
    case "NETWORK_DISCONNECT_LOOP_LEVELLOAD_ACTIVATE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOOP_LEVELLOAD_ACTIVATE;
    case 58:
    case "NETWORK_DISCONNECT_CREATE_SERVER_FAILED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_CREATE_SERVER_FAILED;
    case 59:
    case "NETWORK_DISCONNECT_EXITING":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_EXITING;
    case 60:
    case "NETWORK_DISCONNECT_REQUEST_HOSTSTATE_IDLE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REQUEST_HOSTSTATE_IDLE;
    case 61:
    case "NETWORK_DISCONNECT_REQUEST_HOSTSTATE_HLTVRELAY":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REQUEST_HOSTSTATE_HLTVRELAY;
    case 62:
    case "NETWORK_DISCONNECT_CLIENT_CONSISTENCY_FAIL":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_CLIENT_CONSISTENCY_FAIL;
    case 63:
    case "NETWORK_DISCONNECT_CLIENT_UNABLE_TO_CRC_MAP":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_CLIENT_UNABLE_TO_CRC_MAP;
    case 64:
    case "NETWORK_DISCONNECT_CLIENT_NO_MAP":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_CLIENT_NO_MAP;
    case 65:
    case "NETWORK_DISCONNECT_CLIENT_DIFFERENT_MAP":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_CLIENT_DIFFERENT_MAP;
    case 66:
    case "NETWORK_DISCONNECT_SERVER_REQUIRES_STEAM":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_SERVER_REQUIRES_STEAM;
    case 67:
    case "NETWORK_DISCONNECT_STEAM_DENY_MISC":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_DENY_MISC;
    case 68:
    case "NETWORK_DISCONNECT_STEAM_DENY_BAD_ANTI_CHEAT":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_DENY_BAD_ANTI_CHEAT;
    case 69:
    case "NETWORK_DISCONNECT_SERVER_SHUTDOWN":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_SERVER_SHUTDOWN;
    case 70:
    case "NETWORK_DISCONNECT_SPLITPACKET_SEND_OVERFLOW":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_SPLITPACKET_SEND_OVERFLOW;
    case 71:
    case "NETWORK_DISCONNECT_REPLAY_INCOMPATIBLE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REPLAY_INCOMPATIBLE;
    case 72:
    case "NETWORK_DISCONNECT_CONNECT_REQUEST_TIMEDOUT":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_CONNECT_REQUEST_TIMEDOUT;
    case 73:
    case "NETWORK_DISCONNECT_SERVER_INCOMPATIBLE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_SERVER_INCOMPATIBLE;
    case 74:
    case "NETWORK_DISCONNECT_LOCALPROBLEM_MANYRELAYS":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOCALPROBLEM_MANYRELAYS;
    case 75:
    case "NETWORK_DISCONNECT_LOCALPROBLEM_HOSTEDSERVERPRIMARYRELAY":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOCALPROBLEM_HOSTEDSERVERPRIMARYRELAY;
    case 76:
    case "NETWORK_DISCONNECT_LOCALPROBLEM_NETWORKCONFIG":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOCALPROBLEM_NETWORKCONFIG;
    case 77:
    case "NETWORK_DISCONNECT_LOCALPROBLEM_OTHER":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOCALPROBLEM_OTHER;
    case 79:
    case "NETWORK_DISCONNECT_REMOTE_TIMEOUT":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REMOTE_TIMEOUT;
    case 80:
    case "NETWORK_DISCONNECT_REMOTE_TIMEOUT_CONNECTING":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REMOTE_TIMEOUT_CONNECTING;
    case 81:
    case "NETWORK_DISCONNECT_REMOTE_OTHER":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REMOTE_OTHER;
    case 82:
    case "NETWORK_DISCONNECT_REMOTE_BADCRYPT":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REMOTE_BADCRYPT;
    case 83:
    case "NETWORK_DISCONNECT_REMOTE_CERTNOTTRUSTED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REMOTE_CERTNOTTRUSTED;
    case 84:
    case "NETWORK_DISCONNECT_UNUSUAL":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_UNUSUAL;
    case 85:
    case "NETWORK_DISCONNECT_INTERNAL_ERROR":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_INTERNAL_ERROR;
    case 128:
    case "NETWORK_DISCONNECT_REJECT_BADCHALLENGE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_BADCHALLENGE;
    case 129:
    case "NETWORK_DISCONNECT_REJECT_NOLOBBY":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_NOLOBBY;
    case 130:
    case "NETWORK_DISCONNECT_REJECT_BACKGROUND_MAP":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_BACKGROUND_MAP;
    case 131:
    case "NETWORK_DISCONNECT_REJECT_SINGLE_PLAYER":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_SINGLE_PLAYER;
    case 132:
    case "NETWORK_DISCONNECT_REJECT_HIDDEN_GAME":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_HIDDEN_GAME;
    case 133:
    case "NETWORK_DISCONNECT_REJECT_LANRESTRICT":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_LANRESTRICT;
    case 134:
    case "NETWORK_DISCONNECT_REJECT_BADPASSWORD":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_BADPASSWORD;
    case 135:
    case "NETWORK_DISCONNECT_REJECT_SERVERFULL":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_SERVERFULL;
    case 136:
    case "NETWORK_DISCONNECT_REJECT_INVALIDRESERVATION":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_INVALIDRESERVATION;
    case 137:
    case "NETWORK_DISCONNECT_REJECT_FAILEDCHANNEL":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_FAILEDCHANNEL;
    case 138:
    case "NETWORK_DISCONNECT_REJECT_CONNECT_FROM_LOBBY":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_CONNECT_FROM_LOBBY;
    case 139:
    case "NETWORK_DISCONNECT_REJECT_RESERVED_FOR_LOBBY":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_RESERVED_FOR_LOBBY;
    case 140:
    case "NETWORK_DISCONNECT_REJECT_INVALIDKEYLENGTH":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_INVALIDKEYLENGTH;
    case 141:
    case "NETWORK_DISCONNECT_REJECT_OLDPROTOCOL":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_OLDPROTOCOL;
    case 142:
    case "NETWORK_DISCONNECT_REJECT_NEWPROTOCOL":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_NEWPROTOCOL;
    case 143:
    case "NETWORK_DISCONNECT_REJECT_INVALIDCONNECTION":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_INVALIDCONNECTION;
    case 144:
    case "NETWORK_DISCONNECT_REJECT_INVALIDCERTLEN":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_INVALIDCERTLEN;
    case 145:
    case "NETWORK_DISCONNECT_REJECT_INVALIDSTEAMCERTLEN":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_INVALIDSTEAMCERTLEN;
    case 146:
    case "NETWORK_DISCONNECT_REJECT_STEAM":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_STEAM;
    case 147:
    case "NETWORK_DISCONNECT_REJECT_SERVERAUTHDISABLED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_SERVERAUTHDISABLED;
    case 148:
    case "NETWORK_DISCONNECT_REJECT_SERVERCDKEYAUTHINVALID":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_SERVERCDKEYAUTHINVALID;
    case 149:
    case "NETWORK_DISCONNECT_REJECT_BANNED":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_BANNED;
    case 150:
    case "NETWORK_DISCONNECT_KICKED_TEAMKILLING":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_TEAMKILLING;
    case 151:
    case "NETWORK_DISCONNECT_KICKED_TK_START":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_TK_START;
    case 152:
    case "NETWORK_DISCONNECT_KICKED_UNTRUSTEDACCOUNT":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_UNTRUSTEDACCOUNT;
    case 153:
    case "NETWORK_DISCONNECT_KICKED_CONVICTEDACCOUNT":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_CONVICTEDACCOUNT;
    case 154:
    case "NETWORK_DISCONNECT_KICKED_COMPETITIVECOOLDOWN":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_COMPETITIVECOOLDOWN;
    case 155:
    case "NETWORK_DISCONNECT_KICKED_TEAMHURTING":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_TEAMHURTING;
    case 156:
    case "NETWORK_DISCONNECT_KICKED_HOSTAGEKILLING":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_HOSTAGEKILLING;
    case 157:
    case "NETWORK_DISCONNECT_KICKED_VOTEDOFF":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_VOTEDOFF;
    case 158:
    case "NETWORK_DISCONNECT_KICKED_IDLE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_IDLE;
    case 159:
    case "NETWORK_DISCONNECT_KICKED_SUICIDE":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_SUICIDE;
    case 160:
    case "NETWORK_DISCONNECT_KICKED_NOSTEAMLOGIN":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_NOSTEAMLOGIN;
    case 161:
    case "NETWORK_DISCONNECT_KICKED_NOSTEAMTICKET":
      return ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_NOSTEAMTICKET;
    default:
      throw new tsProtoGlobalThis.Error("Unrecognized enum value " + object + " for enum ENetworkDisconnectionReason");
  }
}

export function eNetworkDisconnectionReasonToJSON(object: ENetworkDisconnectionReason): string {
  switch (object) {
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_INVALID:
      return "NETWORK_DISCONNECT_INVALID";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_SHUTDOWN:
      return "NETWORK_DISCONNECT_SHUTDOWN";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_DISCONNECT_BY_USER:
      return "NETWORK_DISCONNECT_DISCONNECT_BY_USER";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_DISCONNECT_BY_SERVER:
      return "NETWORK_DISCONNECT_DISCONNECT_BY_SERVER";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOST:
      return "NETWORK_DISCONNECT_LOST";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_OVERFLOW:
      return "NETWORK_DISCONNECT_OVERFLOW";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_BANNED:
      return "NETWORK_DISCONNECT_STEAM_BANNED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_INUSE:
      return "NETWORK_DISCONNECT_STEAM_INUSE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_TICKET:
      return "NETWORK_DISCONNECT_STEAM_TICKET";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_LOGON:
      return "NETWORK_DISCONNECT_STEAM_LOGON";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_AUTHCANCELLED:
      return "NETWORK_DISCONNECT_STEAM_AUTHCANCELLED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_AUTHALREADYUSED:
      return "NETWORK_DISCONNECT_STEAM_AUTHALREADYUSED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_AUTHINVALID:
      return "NETWORK_DISCONNECT_STEAM_AUTHINVALID";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_VACBANSTATE:
      return "NETWORK_DISCONNECT_STEAM_VACBANSTATE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_LOGGED_IN_ELSEWHERE:
      return "NETWORK_DISCONNECT_STEAM_LOGGED_IN_ELSEWHERE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_VAC_CHECK_TIMEDOUT:
      return "NETWORK_DISCONNECT_STEAM_VAC_CHECK_TIMEDOUT";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_DROPPED:
      return "NETWORK_DISCONNECT_STEAM_DROPPED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_OWNERSHIP:
      return "NETWORK_DISCONNECT_STEAM_OWNERSHIP";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_SERVERINFO_OVERFLOW:
      return "NETWORK_DISCONNECT_SERVERINFO_OVERFLOW";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_TICKMSG_OVERFLOW:
      return "NETWORK_DISCONNECT_TICKMSG_OVERFLOW";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STRINGTABLEMSG_OVERFLOW:
      return "NETWORK_DISCONNECT_STRINGTABLEMSG_OVERFLOW";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_DELTAENTMSG_OVERFLOW:
      return "NETWORK_DISCONNECT_DELTAENTMSG_OVERFLOW";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_TEMPENTMSG_OVERFLOW:
      return "NETWORK_DISCONNECT_TEMPENTMSG_OVERFLOW";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_SOUNDSMSG_OVERFLOW:
      return "NETWORK_DISCONNECT_SOUNDSMSG_OVERFLOW";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_SNAPSHOTOVERFLOW:
      return "NETWORK_DISCONNECT_SNAPSHOTOVERFLOW";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_SNAPSHOTERROR:
      return "NETWORK_DISCONNECT_SNAPSHOTERROR";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_RELIABLEOVERFLOW:
      return "NETWORK_DISCONNECT_RELIABLEOVERFLOW";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_BADDELTATICK:
      return "NETWORK_DISCONNECT_BADDELTATICK";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_NOMORESPLITS:
      return "NETWORK_DISCONNECT_NOMORESPLITS";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_TIMEDOUT:
      return "NETWORK_DISCONNECT_TIMEDOUT";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_DISCONNECTED:
      return "NETWORK_DISCONNECT_DISCONNECTED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_LEAVINGSPLIT:
      return "NETWORK_DISCONNECT_LEAVINGSPLIT";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_DIFFERENTCLASSTABLES:
      return "NETWORK_DISCONNECT_DIFFERENTCLASSTABLES";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_BADRELAYPASSWORD:
      return "NETWORK_DISCONNECT_BADRELAYPASSWORD";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_BADSPECTATORPASSWORD:
      return "NETWORK_DISCONNECT_BADSPECTATORPASSWORD";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_HLTVRESTRICTED:
      return "NETWORK_DISCONNECT_HLTVRESTRICTED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_NOSPECTATORS:
      return "NETWORK_DISCONNECT_NOSPECTATORS";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_HLTVUNAVAILABLE:
      return "NETWORK_DISCONNECT_HLTVUNAVAILABLE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_HLTVSTOP:
      return "NETWORK_DISCONNECT_HLTVSTOP";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED:
      return "NETWORK_DISCONNECT_KICKED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_BANADDED:
      return "NETWORK_DISCONNECT_BANADDED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKBANADDED:
      return "NETWORK_DISCONNECT_KICKBANADDED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_HLTVDIRECT:
      return "NETWORK_DISCONNECT_HLTVDIRECT";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_PURESERVER_CLIENTEXTRA:
      return "NETWORK_DISCONNECT_PURESERVER_CLIENTEXTRA";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_PURESERVER_MISMATCH:
      return "NETWORK_DISCONNECT_PURESERVER_MISMATCH";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_USERCMD:
      return "NETWORK_DISCONNECT_USERCMD";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECTED_BY_GAME:
      return "NETWORK_DISCONNECT_REJECTED_BY_GAME";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_MESSAGE_PARSE_ERROR:
      return "NETWORK_DISCONNECT_MESSAGE_PARSE_ERROR";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_INVALID_MESSAGE_ERROR:
      return "NETWORK_DISCONNECT_INVALID_MESSAGE_ERROR";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_BAD_SERVER_PASSWORD:
      return "NETWORK_DISCONNECT_BAD_SERVER_PASSWORD";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_DIRECT_CONNECT_RESERVATION:
      return "NETWORK_DISCONNECT_DIRECT_CONNECT_RESERVATION";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_CONNECTION_FAILURE:
      return "NETWORK_DISCONNECT_CONNECTION_FAILURE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_NO_PEER_GROUP_HANDLERS:
      return "NETWORK_DISCONNECT_NO_PEER_GROUP_HANDLERS";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_RECONNECTION:
      return "NETWORK_DISCONNECT_RECONNECTION";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOOPSHUTDOWN:
      return "NETWORK_DISCONNECT_LOOPSHUTDOWN";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOOPDEACTIVATE:
      return "NETWORK_DISCONNECT_LOOPDEACTIVATE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_HOST_ENDGAME:
      return "NETWORK_DISCONNECT_HOST_ENDGAME";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOOP_LEVELLOAD_ACTIVATE:
      return "NETWORK_DISCONNECT_LOOP_LEVELLOAD_ACTIVATE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_CREATE_SERVER_FAILED:
      return "NETWORK_DISCONNECT_CREATE_SERVER_FAILED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_EXITING:
      return "NETWORK_DISCONNECT_EXITING";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REQUEST_HOSTSTATE_IDLE:
      return "NETWORK_DISCONNECT_REQUEST_HOSTSTATE_IDLE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REQUEST_HOSTSTATE_HLTVRELAY:
      return "NETWORK_DISCONNECT_REQUEST_HOSTSTATE_HLTVRELAY";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_CLIENT_CONSISTENCY_FAIL:
      return "NETWORK_DISCONNECT_CLIENT_CONSISTENCY_FAIL";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_CLIENT_UNABLE_TO_CRC_MAP:
      return "NETWORK_DISCONNECT_CLIENT_UNABLE_TO_CRC_MAP";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_CLIENT_NO_MAP:
      return "NETWORK_DISCONNECT_CLIENT_NO_MAP";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_CLIENT_DIFFERENT_MAP:
      return "NETWORK_DISCONNECT_CLIENT_DIFFERENT_MAP";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_SERVER_REQUIRES_STEAM:
      return "NETWORK_DISCONNECT_SERVER_REQUIRES_STEAM";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_DENY_MISC:
      return "NETWORK_DISCONNECT_STEAM_DENY_MISC";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_STEAM_DENY_BAD_ANTI_CHEAT:
      return "NETWORK_DISCONNECT_STEAM_DENY_BAD_ANTI_CHEAT";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_SERVER_SHUTDOWN:
      return "NETWORK_DISCONNECT_SERVER_SHUTDOWN";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_SPLITPACKET_SEND_OVERFLOW:
      return "NETWORK_DISCONNECT_SPLITPACKET_SEND_OVERFLOW";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REPLAY_INCOMPATIBLE:
      return "NETWORK_DISCONNECT_REPLAY_INCOMPATIBLE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_CONNECT_REQUEST_TIMEDOUT:
      return "NETWORK_DISCONNECT_CONNECT_REQUEST_TIMEDOUT";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_SERVER_INCOMPATIBLE:
      return "NETWORK_DISCONNECT_SERVER_INCOMPATIBLE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOCALPROBLEM_MANYRELAYS:
      return "NETWORK_DISCONNECT_LOCALPROBLEM_MANYRELAYS";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOCALPROBLEM_HOSTEDSERVERPRIMARYRELAY:
      return "NETWORK_DISCONNECT_LOCALPROBLEM_HOSTEDSERVERPRIMARYRELAY";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOCALPROBLEM_NETWORKCONFIG:
      return "NETWORK_DISCONNECT_LOCALPROBLEM_NETWORKCONFIG";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_LOCALPROBLEM_OTHER:
      return "NETWORK_DISCONNECT_LOCALPROBLEM_OTHER";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REMOTE_TIMEOUT:
      return "NETWORK_DISCONNECT_REMOTE_TIMEOUT";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REMOTE_TIMEOUT_CONNECTING:
      return "NETWORK_DISCONNECT_REMOTE_TIMEOUT_CONNECTING";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REMOTE_OTHER:
      return "NETWORK_DISCONNECT_REMOTE_OTHER";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REMOTE_BADCRYPT:
      return "NETWORK_DISCONNECT_REMOTE_BADCRYPT";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REMOTE_CERTNOTTRUSTED:
      return "NETWORK_DISCONNECT_REMOTE_CERTNOTTRUSTED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_UNUSUAL:
      return "NETWORK_DISCONNECT_UNUSUAL";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_INTERNAL_ERROR:
      return "NETWORK_DISCONNECT_INTERNAL_ERROR";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_BADCHALLENGE:
      return "NETWORK_DISCONNECT_REJECT_BADCHALLENGE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_NOLOBBY:
      return "NETWORK_DISCONNECT_REJECT_NOLOBBY";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_BACKGROUND_MAP:
      return "NETWORK_DISCONNECT_REJECT_BACKGROUND_MAP";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_SINGLE_PLAYER:
      return "NETWORK_DISCONNECT_REJECT_SINGLE_PLAYER";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_HIDDEN_GAME:
      return "NETWORK_DISCONNECT_REJECT_HIDDEN_GAME";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_LANRESTRICT:
      return "NETWORK_DISCONNECT_REJECT_LANRESTRICT";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_BADPASSWORD:
      return "NETWORK_DISCONNECT_REJECT_BADPASSWORD";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_SERVERFULL:
      return "NETWORK_DISCONNECT_REJECT_SERVERFULL";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_INVALIDRESERVATION:
      return "NETWORK_DISCONNECT_REJECT_INVALIDRESERVATION";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_FAILEDCHANNEL:
      return "NETWORK_DISCONNECT_REJECT_FAILEDCHANNEL";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_CONNECT_FROM_LOBBY:
      return "NETWORK_DISCONNECT_REJECT_CONNECT_FROM_LOBBY";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_RESERVED_FOR_LOBBY:
      return "NETWORK_DISCONNECT_REJECT_RESERVED_FOR_LOBBY";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_INVALIDKEYLENGTH:
      return "NETWORK_DISCONNECT_REJECT_INVALIDKEYLENGTH";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_OLDPROTOCOL:
      return "NETWORK_DISCONNECT_REJECT_OLDPROTOCOL";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_NEWPROTOCOL:
      return "NETWORK_DISCONNECT_REJECT_NEWPROTOCOL";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_INVALIDCONNECTION:
      return "NETWORK_DISCONNECT_REJECT_INVALIDCONNECTION";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_INVALIDCERTLEN:
      return "NETWORK_DISCONNECT_REJECT_INVALIDCERTLEN";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_INVALIDSTEAMCERTLEN:
      return "NETWORK_DISCONNECT_REJECT_INVALIDSTEAMCERTLEN";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_STEAM:
      return "NETWORK_DISCONNECT_REJECT_STEAM";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_SERVERAUTHDISABLED:
      return "NETWORK_DISCONNECT_REJECT_SERVERAUTHDISABLED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_SERVERCDKEYAUTHINVALID:
      return "NETWORK_DISCONNECT_REJECT_SERVERCDKEYAUTHINVALID";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_REJECT_BANNED:
      return "NETWORK_DISCONNECT_REJECT_BANNED";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_TEAMKILLING:
      return "NETWORK_DISCONNECT_KICKED_TEAMKILLING";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_TK_START:
      return "NETWORK_DISCONNECT_KICKED_TK_START";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_UNTRUSTEDACCOUNT:
      return "NETWORK_DISCONNECT_KICKED_UNTRUSTEDACCOUNT";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_CONVICTEDACCOUNT:
      return "NETWORK_DISCONNECT_KICKED_CONVICTEDACCOUNT";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_COMPETITIVECOOLDOWN:
      return "NETWORK_DISCONNECT_KICKED_COMPETITIVECOOLDOWN";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_TEAMHURTING:
      return "NETWORK_DISCONNECT_KICKED_TEAMHURTING";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_HOSTAGEKILLING:
      return "NETWORK_DISCONNECT_KICKED_HOSTAGEKILLING";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_VOTEDOFF:
      return "NETWORK_DISCONNECT_KICKED_VOTEDOFF";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_IDLE:
      return "NETWORK_DISCONNECT_KICKED_IDLE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_SUICIDE:
      return "NETWORK_DISCONNECT_KICKED_SUICIDE";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_NOSTEAMLOGIN:
      return "NETWORK_DISCONNECT_KICKED_NOSTEAMLOGIN";
    case ENetworkDisconnectionReason.NETWORK_DISCONNECT_KICKED_NOSTEAMTICKET:
      return "NETWORK_DISCONNECT_KICKED_NOSTEAMTICKET";
    default:
      throw new tsProtoGlobalThis.Error("Unrecognized enum value " + object + " for enum ENetworkDisconnectionReason");
  }
}

declare var self: any | undefined;
declare var window: any | undefined;
declare var global: any | undefined;
var tsProtoGlobalThis: any = (() => {
  if (typeof globalThis !== "undefined") {
    return globalThis;
  }
  if (typeof self !== "undefined") {
    return self;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof global !== "undefined") {
    return global;
  }
  throw "Unable to locate global object";
})();
